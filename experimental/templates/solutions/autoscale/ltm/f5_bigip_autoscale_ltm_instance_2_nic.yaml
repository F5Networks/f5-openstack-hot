heat_template_version: 2016-04-08

description: This template deploys a standard f5 BIG-IP VE - 2NIC ready for clustering. The HA self-ip is configured on the data VLAN.

parameters:
  bigip_image:
    type: string
    label: f5 BIG-IP VE Image
    description: The BIG-IP VE image to be used on the compute instance.
    constraints:
      - custom_constraint: glance.image
  bigip_flavor:
    type: string
    label: f5 BIG-IP VE Flavor
    description: Type of instance (flavor) to be used for the VE.
    constraints:
      - custom_constraint: nova.flavor
  use_config_drive:
    type: boolean
    label: Use Config Drive
    description: Use config drive to provide meta and user data.
    default: false
  f5_cloudlibs_tag:
    type: string
    label: f5 CloudLibs Tag
    description: Tag that determines version of f5 cloudlibs to use for provisioning. If specified, ensure that hashes are valid by either updating scripts/verifyHash or by providing a f5_cloudlibs_verify_hash_url_override value.
    default: v3.5.0
  f5_cloudlibs_url_override:
    type: string
    label: f5 cloud-libs URL Override
    description: Alternate URL for f5-cloud-libs package. If not specified, the default GitHub location for f5-cloud-libs will be used. If version is different from default f5_cloudlibs_tag, ensure that hashes are valid by either updating scripts/verifyHash or by providing a f5_cloudlibs_verify_hash_url_override value.
    default: None
  f5_cloudlibs_verify_hash_url_override:
    type: string
    label: f5 cloud-libs verifyHash URL Override
    description: Alternate URL for verifyHash used to validate f5-cloud-libs* package. If not specified, the scripts/verifyHash will be used.
    default: None
  f5_cloudlibs_openstack_tag:
    type: string
    label: f5-cloud-libs-openstack Tag
    description: Tag that determines version of f5 cloudlibs-package to use for provisioning. If specified, ensure that hashes are valid by either updating scripts/verifyHash or by providing a f5_cloudlibs_verify_hash_url_override value.
    default: v1.0.0
  f5_cloudlibs_openstack_url_override:
    type: string
    label: f5-cloud-libs-openstack URL Override
    description: Alternate URL for f5-cloud-libs-openstack package. If not specified, the default GitHub location for f5-cloud-libs will be used. If version is different from default f5_cloudlibs_tag, ensure that hashes are valid by either updating scripts/verifyHash or by providing a f5_cloudlibs_verify_hash_url_override value.
    default: None
  bigip_servers_ntp:
    type: comma_delimited_list
    label: f5 BIG-IP VE NTP servers
    description: A list of NTP servers to configure on the BIG-IP.
    default:
      - 0.us.pool.ntp.org
      - 1.us.pool.ntp.org
  bigip_servers_dns:
    type: comma_delimited_list
    label: f5 BIG-IP VE Domain Name Servers
    description: A list of DNS servers to configure on the BIG-IP.
    default:
      -
  #bigip credentials
  bigip_os_ssh_key:
    type: string
    label: f5 BIG-IP VE Root SSH Key Name
    description: Name of key-pair to be installed on the BIG-IP VE instance to allow root SSH access.
    constraints:
      - custom_constraint: nova.keypair
  bigip_admin_pwd:
    type: string
    label: f5 BIG-IP VE Admin User Password
    description: Password for the BIG-IP admin user.
    hidden: true
  bigip_root_pwd:
    type: string
    label: f5 BIG-IP VE Root User Password
    description: Password for the BIG-IP root user.
    hidden: true
  #bigip licensing
  bigiq_license_host_ip:
    type: string
    label: f5 BIG-IQ License Host IP Address
    description: The IP address (or hostname) for the existing BIG-IQ instance to be used when licensing the BIG-IP. The instance can exist in another cloud environment as long as it is network reachable.
  bigiq_license_username:
    type: string
    label: f5 BIG-IQ UserName
    description: The BIG-IQ username to use to license the BIG-IP instances.
  bigiq_license_pwd:
    type: string
    label: f5 BIG-IQ Password
    description: The BIG-IQ password to use to license the BIG-IP instances.
    hidden: True
  bigiq_license_pool:
    type: string
    label: f5 BIG-IQ License Pool Name
    description: f5 BIG-IP License Pool to use to license the BIG-IP instances.
  bigiq_use_bigip_floating_ip:
    type: boolean
    label: Use BIG-IP Floating IP for BIG-IQ licensing
    description: Determines whether to use the external address or floating ip of the BIG-IP for BIG-IQ licensing
    default: false
  # Note: For now, default to None. If needed, we can expose to parent template and add config for new port
  bigiq_alt_bigip_port:
    type: string
    label: Alternate BIG-IP Port for BIG-IQ licensing
    description: The alternate port to use when licensing the BIG-IP through BIG-IQ. If not specified, management port is used.
    default: None
  bigip_modules:
    type: comma_delimited_list
    label: Modules to provision on the BIG-IP.
    description: A list modules to provision and their level. <module_name:level>
    default:
      - ltm:nominal
  #os network
  external_network:
    type: string
    label: External Network Name
    description: Name of external network where floating IP resides.
    constraints:
      - custom_constraint: neutron.network
  mgmt_network:
    type: string
    label: Management Network
    description: Network to which the BIG-IP management interface is attached.
    constraints:
      - custom_constraint: neutron.network
  mgmt_security_group_id:
    type: string
    label: Management Security Group Id
    description: Neutron Security Group ID for the BIG-IP management network.
  network_vlan_security_group_id:
    type: string
    label: Network vlan Security Group ID
    description: Neutron Security Group ID for the BIG-IP VLAN.
  network_vlan_name:
    type: string
    label: OS Neutron Network to map to the BIG-IP VLAN
    description: The Neutron Network for the corresponding BIG-IP VLAN.
    constraints:
      - custom_constraint: neutron.network
  network_vlan_subnet:
    type: string
    label: OS Neutron Subnet to map to the BIG-IP VLAN
    description: The Neutron Subnet for the corresponding BIG-IP VLAN.
    constraints:
      - custom_constraint: neutron.subnet
  #bigip network
  bigip_default_gateway:
    type: string
    label: Default Gateway IP
    description: Upstream Gateway IP Address for BIG-IP instances.
    default: None
  bigip_mgmt_port:
    type: number
    label: Management port
    description: Port for the BIG-IP Management uri
    default: 443
  bigip_vlan_name:
    type: string
    label: f5 BIG-IP VE VLAN name
    description: Name of the VLAN to be created on the BIG-IP.
    default: data
  bigip_vlan_mtu:
    type: number
    label: f5 BIG-IP VE VLAN MTU
    description: MTU value of the VLAN on the BIG-IP.
    default: 1400
  bigip_vlan_tag:
    type: string
    label: f5 BIG-IP VE VLAN tag
    description: Tag to apply on the VLAN on the BIG-IP. Use default value "None" for untagged.
    default: None
  bigip_vlan_nic:
    type: string
    label: f5 BIG-IP VE VLAN NIC
    description: The NIC associated with the BIG-IP VLAN.
    default: 1.1
  bigip_self_cidr_block:
    type: string
    label: f5 BIG-IP VE VLAN CIDR Block
    description: CIDR Block for the BIG-IP SelfIP address.
  bigip_self_port_lockdown:
    type: comma_delimited_list
    label: f5 BIG-IP VE VLAN Allow Services
    description: Optional list of <service:port> lockdown settings for the VLAN. If no value is supplied, default is used.
    default:
      -
  #autoscale
  bigip_device_group:
    type: string
    label: f5 BIG-IP Device Group Name
    description: Name Prefix of the BIG-IP Group to create or join
    default: Sync
  autoscale_metadata_endpoint:
    type: string
    label: Autoscale Metadata URL
    description: URL Endpoint for storing Autoscale metadata
  autoscale_group_tag:
    type: string
    label: Autoscale Group Tag
    description: String value to attach as metadata to instance to help identify membership in the autoscaling group
  autoscale_metadata_resource_name:
    type: string
    label: Autoscale Metadata Resource Name
    description: Name of resource for storing autoscale metadata
  autoscale_stack_name:
    type: string
    label: Autoscale Stack Name
    description: Name of the parent stack that was launched
  os_username:
    type: string
    label: Openstack User Name
    description: User name for openstack account that can perform stack operations
  os_password:
    type: string
    label: Openstack Password
    description: Password for openstack account that can perform stack operations
    hidden: True
  os_region:
    type: string
    label: Openstack Region
    description: Region for openstack account that can perform stack operations
    default: regionOne
  os_auth_url:
    type: string
    label: Openstack Auth Endpoint URL
    description: Auth Endpoint URLfor openstack account that can perform stack operations
  os_auth_version:
    type: string
    label: Openstack Auth Version
    description: Version of the Auth URL
    default: v3
  os_domain_name:
    type: string
    label: Openstack domain name
    description: Name of the openstack domain
    default: default

  # Optional Usage Analytics
  ua_allow:
    type: boolean
    label: Allow Usage Analytics
    description: Toggles whether non-identifiable statistical information is sent to F5.
    default: True
  ua_template_name:
    type: string
    label: Template Name (Usage Analytics)
    description: Name of the template used to launch the stack
    default: None
  ua_template_version:
    type: string
    label: Template Version (Usage Analytics)
    description: Version of the template used to launch the stack
    default: None
  ua_cloudlibs_tag:
    type: string
    label: f5-cloud-libs Tag (Usage Analytics)
    description: Tag that identifies cloudlibs version
    default: None
  ua_project_id:
    type: string
    label: Project ID (Usage Analytics)
    description: ID of the template user
    default: None
  ua_region:
    type: string
    label: Region (Usage Analytics)
    description: Region where template is launched
    default: None
  ua_stack_id:
    type: string
    label: Stack Id (Usage Analytics)
    description: Stack Id or Name
    default: None
parameter_groups:
  - label: BIG-IP General Provisioning
    parameters:
    - bigip_image
    - bigip_flavor
    - use_config_drive
    - f5_cloudlibs_tag
    - f5_cloudlibs_url_override
    - f5_cloudlibs_verify_hash_url_override
    - bigip_servers_ntp
    - bigip_servers_dns
  - label: BIG-IP Credentials
    parameters:
    - bigip_os_ssh_key
    - bigip_admin_pwd
    - bigip_root_pwd
  - label: BIG-IP Licensing and Modules
    parameters:
    - bigip_modules
  - label: OS Network
    parameters:
    - external_network
    - mgmt_network
    - mgmt_security_group_id
    - network_vlan_security_group_id
    - network_vlan_name
    - network_vlan_subnet
  - label: BIG-IP Network
    parameters:
    - bigip_default_gateway
    - bigip_mgmt_port
    - bigip_vlan_name
    - bigip_vlan_mtu
    - bigip_vlan_tag
    - bigip_vlan_nic
    - bigip_self_cidr_block
    - bigip_self_port_lockdown
  - label: BIG-IP Autoscale
    parameters:
    - bigip_device_group
  - label: Usage Analytics
    parameters:
    - ua_allow
    - ua_cloudlibs_tag
    - ua_project_id
    - ua_stack_id
    - ua_template_name
    - ua_template_version
    - ua_region

resources:
  wait_condition_onboard_complete:
    type: OS::Heat::WaitCondition
    properties:
      handle: {get_resource: wait_handle_onboard}
      count: 3
      timeout: 1800
  wait_handle_onboard:
    type: OS::Heat::WaitConditionHandle
  wait_condition_onboard_network_complete:
    type: OS::Heat::WaitCondition
    properties:
      handle: {get_resource: wait_handle_onboard_network}
      count: 2
      timeout: 1800
  wait_handle_onboard_network:
    type: OS::Heat::WaitConditionHandle
  wait_condition_onboard_autoscale_init_complete:
    type: OS::Heat::WaitCondition
    properties:
      handle: {get_resource: wait_handle_onboard_autoscale_init}
      count: 1
      timeout: 1800
  wait_handle_onboard_autoscale_init:
    type: OS::Heat::WaitConditionHandle
  mgmt_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: mgmt_network }
      security_groups: [{ get_param: mgmt_security_group_id}]
  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: external_network }
      port_id: { get_resource: mgmt_port }
  network_vlan_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: network_vlan_name }
      security_groups: [{get_param: network_vlan_security_group_id}]
      admin_state_up: true
      fixed_ips:
        - subnet: { get_param: network_vlan_subnet }
        - subnet: { get_param: network_vlan_subnet}
  init_1_override_default_config:
    type: F5::BigIP::OverrideDefaultConfig
    properties:
      admin_password: { get_param: bigip_admin_pwd }
      root_password: { get_param: bigip_root_pwd }
  init_2_onboard_libs:
    type: F5::BigIP::OnboardingLibs
    properties:
      cloudlibs_tag: { get_param: f5_cloudlibs_tag }
      cloudlibs_url_override: { get_param: f5_cloudlibs_url_override }
      cloudlibs_os_tag: { get_param: f5_cloudlibs_openstack_tag }
      cloudlibs_os_url_override: { get_param: f5_cloudlibs_openstack_url_override }
  init_3_onboard_scripts:
    type: F5::BigIP::OnboardingScripts
    properties:
      verify_hash_url_override: { get_param: f5_cloudlibs_verify_hash_url_override}
      bigiq_license_host_ip: { get_param: bigiq_license_host_ip }
      bigiq_license_username: { get_param: bigiq_license_username }
      bigiq_license_pwd: { get_param: bigiq_license_pwd }
      bigiq_license_pool: { get_param: bigiq_license_pool }
      bigiq_alt_bigip_mgmt_ip: { get_attr: [floating_ip, floating_ip_address] }
      bigiq_alt_bigip_mgmt_port: { get_param: bigiq_alt_bigip_port }
      bigiq_use_alt_bigip_mgmt_ip: { get_param: bigiq_use_bigip_floating_ip }
      modules: { get_param: bigip_modules }
      ntp: { get_param: bigip_servers_ntp }
      dns: { get_param: bigip_servers_dns }
      host_name: { get_attr: [ mgmt_port, show, dns_assignment, 0, fqdn] }
      management_ip: { get_attr: [ mgmt_port, fixed_ips, 0, ip_address] }
      management_port: { get_param: bigip_mgmt_port }
      ssh_key_name: { get_param: bigip_os_ssh_key }
      use_config_drive: { get_param: use_config_drive }
      wait_handle_curl: { get_attr: [wait_handle_onboard, curl_cli] }
      keep_admin: True
      keep_config_drive: True
      keep_bigiq: True
      ua_allow: { get_param: ua_allow }
      ua_template_name: { get_param: ua_template_name }
      ua_template_version: { get_param: ua_template_version }
      ua_cloudlibs_tag: { get_param: ua_cloudlibs_tag }
      ua_project_id: { get_param: ua_project_id }
      ua_region: { get_param: ua_region }
      ua_stack_id: { get_param: ua_stack_id }
      ua_license_type: BIGIQ
  init_4_1_onboard_network_config:
    type: F5::BigIP::OnboardNetworkConfig
    properties:
      vlan_name: { get_param: bigip_vlan_name }
      vlan_tag: { get_param: bigip_vlan_tag }
      vlan_mtu: { get_param: bigip_vlan_mtu }
      vlan_nic: { get_param: bigip_vlan_nic }
      self_name: cluster_self
      self_ip_addr: { get_attr: [network_vlan_port, fixed_ips, 0, ip_address] }
      self_cidr_block: { get_param: bigip_self_cidr_block }
      self_port_lockdown:
          - tcp:4353
          - udp:1026
          - tcp:443
      default_gateway: { get_param: bigip_default_gateway }
      wait_handle_curl: { get_attr: [wait_handle_onboard_network, curl_cli]}
  init_4_2_onboard_network_config:
    type: F5::BigIP::OnboardNetworkConfig
    properties:
      script_path: /config/onboard-network-2.sh
      vlan_create_new: false
      vlan_name: { get_param: bigip_vlan_name }
      self_name: data_self
      self_ip_addr: { get_attr: [network_vlan_port, fixed_ips, 1, ip_address] }
      self_cidr_block: { get_param: bigip_self_cidr_block }
      self_port_lockdown: { get_param: bigip_self_port_lockdown }
      wait_handle_curl: { get_attr: [wait_handle_onboard_network, curl_cli]}
  init_5_onboard_autoscale_config:
    type: F5::BigIP::OnboardAutoscaleConfig
    properties:
      mgmt_ip: { get_attr: [mgmt_port, fixed_ips, 0, ip_address] }
      mgmt_port: { get_param: bigip_mgmt_port }
      host_name: { get_attr: [mgmt_port, show, dns_assignment, 0, fqdn] }
      config_sync_ip: { get_attr: [network_vlan_port, fixed_ips, 0, ip_address] }
      bigiq_license_host_ip: { get_param: bigiq_license_host_ip }
      bigiq_license_username: { get_param: bigiq_license_username }
      bigiq_license_pool: { get_param: bigiq_license_pool }
      bigiq_alt_bigip_mgmt_ip: { get_attr: [floating_ip, floating_ip_address] }
      bigiq_alt_bigip_mgmt_port: { get_param: bigiq_alt_bigip_port }
      bigiq_use_alt_bigip_mgmt_ip: { get_param: bigiq_use_bigip_floating_ip }
      use_config_drive: { get_param: use_config_drive }
      wait_handle_curl: { get_attr: [wait_handle_onboard_autoscale_init, curl_cli]}
      autoscale_group_tag: { get_param: autoscale_group_tag }
      autoscale_metadata_endpoint: { get_param: autoscale_metadata_endpoint }
      autoscale_stack_name: { get_param: autoscale_stack_name }
      autoscale_metadata_resource_name: { get_param: autoscale_metadata_resource_name }
      device_group:
        str_replace:
          params:
            __group_tag__: { get_param: autoscale_group_tag }
            __prefix__: { get_param: bigip_device_group }
          template: __prefix_____group_tag__
      os_username: { get_param: os_username }
      os_password: { get_param: os_password }
      os_region: { get_param: os_region }
      os_auth_url: { get_param: os_auth_url }
      os_domain_name: { get_param: os_domain_name }
      os_auth_version: { get_param: os_auth_version }
  init_6_run_commands:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        merge_how: dict(recurse_array,no_replace)+list(append)
        runcmd:
          - nohup /config/preOnboard.sh &>> /var/log/preOnboard.log < /dev/null &
          - nohup sh -c '/config/wait_cloudlibs_install.sh; /config/onboard.sh' >> /var/log/onboard.log < /dev/null &
          - nohup sh -c '/config/wait_cloudlibs_install.sh; f5-rest-node /config/cloud/openstack/node_modules/f5-cloud-libs/scripts/runScript.js --file /config/onboard-network.sh --wait-for ONBOARD_DONE --signal ONBOARD_NETWORK1_DONE' &>> /var/log/runScript.log < /dev/null &
          - nohup sh -c '/config/wait_cloudlibs_install.sh; f5-rest-node /config/cloud/openstack/node_modules/f5-cloud-libs/scripts/runScript.js --file /config/onboard-network-2.sh --wait-for ONBOARD_NETWORK1_DONE --signal ONBOARD_NETWORK2_DONE' &>> /var/log/runScript.log < /dev/null &
          - nohup sh -c '/config/wait_cloudlibs_install.sh; f5-rest-node /config/cloud/openstack/node_modules/f5-cloud-libs/scripts/runScript.js --file /config/onboard-autoscale.sh --wait-for ONBOARD_NETWORK2_DONE --signal ONBOARD_AUTOSCALE_DONE' &>> /var/log/runScript.log < /dev/null &
          - nohup sh -c '/config/wait_cloudlibs_install.sh; f5-rest-node /config/cloud/openstack/node_modules/f5-cloud-libs/scripts/runScript.js --file /config/postOnboard.sh --wait-for ONBOARD_AUTOSCALE_DONE -o /var/log/postOnboard.log' &>> /var/log/runScript.log < /dev/null &
  bigip_provision:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: init_1_override_default_config}
      - config: {get_resource: init_2_onboard_libs}
      - config: {get_resource: init_3_onboard_scripts}
      - config: {get_resource: init_4_1_onboard_network_config}
      - config: {get_resource: init_4_2_onboard_network_config}
      - config: {get_resource: init_5_onboard_autoscale_config}
      - config: {get_resource: init_6_run_commands}
  bigip_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: bigip_image }
      flavor: { get_param: bigip_flavor }
      key_name: { get_param: bigip_os_ssh_key }
      admin_user: root
      config_drive: { get_param: use_config_drive }
      networks:
        - port: {get_resource: mgmt_port }
        - port: {get_resource: network_vlan_port}
      user_data_format: RAW
      user_data: {get_resource: bigip_provision}
      metadata:
        autoscale_group_tag: { get_param: autoscale_group_tag}
        management_ip: { get_attr: [ mgmt_port, fixed_ips, 0, ip_address] }
        config_sync_ip: { get_attr: [network_vlan_port, fixed_ips, 0, ip_address] }
        host_name: { get_attr: [ mgmt_port, show, dns_assignment, 0, fqdn] }
outputs:
  resourceid:
    value: { get_param: "OS::stack_id" }
  bigip_instance_id:
    description: ID of the BIG-IP instance
    value: { get_resource: bigip_instance }
  bigip_instance_name:
    description: Name of the BIG-IP instance
    value: { get_attr: [bigip_instance, name] }
  bigip_instance_networks:
    description: Management IP of the BIG-IP instance
    value: { get_attr: [bigip_instance, networks]}
  bigip_instance_addresses:
    description: Cluster and Data SelfIPs of the BIG-IP instance
    value: { get_attr: [bigip_instance, addresses]}
  bigip_instance_floating_ip:
    description: Management Floating IP of the BIG-IP Instance
    value: { get_attr: [floating_ip, floating_ip_address] }
