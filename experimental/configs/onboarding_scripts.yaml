heat_template_version: 2016-04-08

description: This template creates additional scripts required to provision a Big-IP.

parameters:
  # Optional Usage Analytics
  ua_allow:
    type: boolean
    label: Allow Usage Analytics
    description: Toggles whether non-identifiable statistical information is sent to F5.
    default: true
  ua_template_name:
    type: string
    label: Template Name (Usage Analytics)
    description: Name of the template used to launch the stack
    default: None
  ua_template_version:
    type: string
    label: Template Version (Usage Analytics)
    description: Version of the template used to launch the stack
    default: None
  ua_cloudlibs_tag:
    type: string
    label: f5-cloud-libs Tag (Usage Analytics)
    description: Tag that identifies cloudlibs version
    default: None
  ua_project_id:
    type: string
    label: Project ID (Usage Analytics)
    description: ID of the template user
    default: None
  ua_region:
    type: string
    label: Region (Usage Analytics)
    description: Region where template is launched
    default: None
  ua_stack_id:
    type: string
    label: Stack Id (Usage Analytics)
    description: Stack Id or Name
    default: None
  ua_license_type:
    type: string
    label: License Type (Usage Analytics)
    description: Type of Licensing
    default: BYOL

  verify_hash_url_override:
    type: string
    label: Script verifyHash override source URL
    description: The URL to the source of verifyHash script override
    default: None
  verify_cloudlibs_os:
    type: boolean
    label: Verify f5-cloud-libs-openstack package
    description: Toggles verify of f5-cloud-libs-openstack package.
    default: false
  bigip_addon_licenses:
    type: comma_delimited_list
    label: Additional VE License Keys
    description: f5 TMOS License Add-On Keys.
    default:
      -
  bigip_license:
    type: string
    label: Primary VE License Base Key
    description: f5 TMOS License Basekey
    default: None
  modules:
    type: json
    label: Modules to provision on the BIG-IP.
    description: A list of modules to provision and their respective levels. <module_name:level>
  ntp:
    type: comma_delimited_list
    label: NTP servers
    description: A list of NTP servers
    default:
      -
  dns:
    type: comma_delimited_list
    label: Domain Name Servers
    description: A list of Domain Name Servers
    default:
      -
  remote_hosts_names:
    type: comma_delimited_list
    label: f5 BIG-IP VE Remote Host Names
    description: A list of remote hosts to add to the BIG-IP
    default:
      -
  remote_hosts_ips:
    type: comma_delimited_list
    label: f5 BIG-IP VE Remote Host IP Addresses
    description: A list of remote host ips to add to the BIG-IP. The index should match the entries provided in bigip_remote_hosts_names
    default:
      -
  timezone:
    type: string
    label: Time Zone
    description: Time Zone to configure the device with
    default: UTC
  host_name:
    type: string
    label: Host Name
    description: BIG-IP Host Name
  management_port_id:
    type: string
    label: Management Port ID
    description: Neutron Port ID of the BIG-IP Management NIC
  management_port:
    type: number
    label: Management Port
    description: Management port for the BIG-IP admin
  set_management_mtu:
    type: boolean
    label: Post-onboard Set Management MTU
    description: Toggles the flag for setting management MTU after onboard
    default: false
  management_nic:
    type: string
    label: Management NIC Name
    description: Name of Management NIC
    default: mgmt
  management_mtu:
    type: number
    label: Management NIC MTU
    description: MTU value for the BIG-IP Management NIC
    default: 1400
  ssh_key_name:
    type: string
    label: SSH Key Name
    description: SSH Key Name to inject for Big-IP Access.
  use_config_drive:
    type: boolean
    label: Enable Config Drive
    description: Determines if cloud init data is polled from config drive instead of metadata service.
    default: false
  wait_handle_curl:
    type: string
    label: Wait Handle
    description: Resolved curl_cli value of the WaitConditionHandle that enables status signals to be sent back to Heat
  wait_handle_curl_options:
    type: string
    label: Wait Handle Curl Additional Options
    description: Additonal options to add to curl_cli value of the WaitConditionHandle that enables status signals to be sent back to Heat
    default: None
  keep_admin:
    type: boolean
    label: Keep Admin
    description: Toggles removal of admin file after all onboard is done. Set to true if there is an ongoing process that needs access.
    default: false
  keep_bigiq:
    type: boolean
    label: Keep Big-IQ
    description: Toggles removal of big-iq file after all onboard is done. Set to true if there is an ongoing process that needs access.
    default: false
  keep_config_drive:
    type: boolean
    label: Keep Config Drive
    description: Toggles removal of config drive after initial onboard is done. Set to true if there is a process that needs access after initial onboard.
    default: false
  bigiq_use_alt_bigip_mgmt_ip:
    type: boolean
    label: Use BIG-IP Alternate Management IP Address for licensing
    description: Determines whether to provide an alternate management ip address for licensing with BIG-IQ
    default: false
  bigiq_alt_bigip_mgmt_ip:
    type: string
    label: f5 BIG-IP Alternate License Management IP address
    description: An alternate management IP address of the BIG-IP instance to use to receive responses for BIG-IQ licensing.
    default: None
  bigiq_alt_bigip_mgmt_port:
    type: string
    label: f5 BIG-IP Alternate License Management Port
    description: An alternate management port of the BIG-IP instance to use to receive responses for BIG-IQ licensing.
    default: None
  bigiq_license_host_ip:
    type: string
    label: f5 BIG-IQ License Host IP Address
    description: The IP address (or FQDN) for the existing BIG-IQ instance to be used when licensing the BIG-IP. The instance can exist in another cloud environment as long as it is network reachable.
    default: None
  bigiq_license_username:
    type: string
    label: f5 BIG-IQ UserName
    description: The BIG-IQ username to use to license the BIG-IP instances.
    default: None
  bigiq_license_pwd:
    type: string
    label: f5 BIG-IQ Password
    description: The BIG-IQ password to use to license the BIG-IP instances.
    default: None
  bigiq_license_pool:
    type: string
    label: f5 BIG-IQ License Pool Name
    description: f5 BIG-IP License Pool to use to license the BIG-IP instances.
    default: None
  db_vars:
    type: comma_delimited_list
    label: DB Variables
    description: Custom DB Variable values in the format <key:value>
    default:
      -
resources:
  onboarding_scripts:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        merge_how: dict(recurse_array,no_replace)+list(append)
        write_files:
          - path: /config/cloud/openstack/.bigIqPwd
            permissions: 0755
            owner: root:root
            content: { get_param: bigiq_license_pwd }
          - path: /config/verifyHash
            permissions: 0755
            owner: root:root
            content: { get_file: ../scripts/verifyHash }
          - path: /config/preOnboard.sh
            permissions: 0755
            owner: root:root
            content:
              str_replace:
                params:
                  __remote_hosts_names__: { get_param: remote_hosts_names }
                  __remote_hosts_ips__: { get_param: remote_hosts_ips }
                  __ssh_key_name__: { get_param: ssh_key_name }
                  __use_config_drive__: { get_param: use_config_drive }
                  __verify_hash_override__: { get_param: verify_hash_url_override }
                  __verify_cloudlibs_os__: { get_param: verify_cloudlibs_os }
                  __wc_notify_options__: { get_param: wait_handle_curl_options }
                  wc_notify: { get_param: wait_handle_curl}
                template: { get_file: ../scripts/preOnboard.sh }
          - path: /config/wait-cloudlibsInstall.sh
            permissions: 0755
            owner: root:root
            content: { get_file: ../scripts/wait-cloudlibsInstall.sh }
          - path: /config/encrypt.sh
            permissions: 0755
            owner: root:root
            content: { get_file: ../scripts/encrypt.sh }
          - path: /config/postOnboard.sh
            permissions: 0755
            owner: root:root
            content:
              str_replace:
                params:
                  __wc_notify_options__: { get_param: wait_handle_curl_options }
                  wc_notify: { get_param: wait_handle_curl}
                  __keep_admin__: { get_param: keep_admin }
                  __keep_bigiq__: { get_param: keep_bigiq }
                  __keep_config_drive__: { get_param: keep_config_drive }
                  __set_mgmt_mtu__: { get_param: set_management_mtu }
                  __mgmt_mtu__: { get_param: management_mtu }
                  __mgmt_nic__: { get_param: management_nic }
                template: { get_file: ../scripts/postOnboard.sh }
          - path: /config/onboard.sh
            permissions: 0755
            owner: root:root
            content:
              str_replace:
                params:
                  __license__: { get_param: bigip_license }
                  __bigiq_host__: { get_param: bigiq_license_host_ip }
                  __bigiq_username__: { get_param: bigiq_license_username }
                  __bigiq_lic_pool__: { get_param: bigiq_license_pool }
                  __bigiq_use_alt_mgmt_ip__: { get_param: bigiq_use_alt_bigip_mgmt_ip }
                  __bigiq_alt_mgmt_ip__: { get_param: bigiq_alt_bigip_mgmt_ip }
                  __bigiq_alt_mgmt_port__: { get_param: bigiq_alt_bigip_mgmt_port }
                  __host_name__: { get_param: host_name }
                  __mgmt_port_id__: { get_param: management_port_id }
                  __mgmt_port__: { get_param: management_port }
                  __add_on_licenses__:
                    list_join:
                      - ' '
                      -
                        repeat:
                          template: --add-on "addon"
                          for_each:
                            addon: {get_param: bigip_addon_licenses}
                  __dns__:
                    list_join:
                      - ' '
                      -
                        repeat:
                          template: --dns server_dns
                          for_each:
                            server_dns: {get_param: dns}
                  __modules__:
                    list_join:
                      - ' '
                      -
                        repeat:
                          template: --module bigip_module
                          for_each:
                            bigip_module: {get_param: modules}
                  __ntp__:
                    list_join:
                      - ' '
                      -
                        repeat:
                          template: --ntp server_ntp
                          for_each:
                            server_ntp: { get_param: ntp }
                  __timezone__: { get_param: timezone }
                  __allow_ua__: { get_param: ua_allow }
                  __template_name__: { get_param: ua_template_name }
                  __template_version__: { get_param: ua_template_version }
                  __cloudlibs_tag__: { get_param: ua_cloudlibs_tag }
                  __cust_id__: { get_param: ua_project_id }
                  __deploy_id__: { get_param: ua_stack_id }
                  __region__: { get_param: ua_region }
                  __license_type__: { get_param: ua_license_type }
                  __db_vars__:
                    list_join:
                      - ' '
                      -
                        repeat:
                          template: --db db_var
                          for_each:
                            db_var: {get_param: db_vars}
                  __wc_notify_options__: { get_param: wait_handle_curl_options }
                  wc_notify: { get_param: wait_handle_curl }
                template: { get_file: ../scripts/onboard.sh }

outputs:
  OS::stack_id:
    description: The F5::BigIP::OnboardingScripts resource.
    value:
      get_resource: onboarding_scripts
