heat_template_version: 2016-04-08

description: This template builds components for dynamic number of nics.
# This used to be bigip_nnic_handler. It was refactored and is kept here for archival purposes and will be deprecated and removed.

parameters:
  bigip_nic_count:
    type: number
    label: f5 BIG-IP NIC count
    description: Number of additional NICs to attach to the BIG-IP. Note - exclude management nic from count.
  bigip_last_nic_index:
    type: number
    label: f5 BIG-IP last NIC index (0-based)
    description: The 0-based index of the last NIC to attach to Big-IP. This is essentially bigip_nic_count minus 1. This helps identify the last nic in the resource group.
                 Since there are no intrinsic arithmetic functions currently supported in heat, this parameter is required.
  network_vlan_names:
    type: comma_delimited_list
    label: OS Neutron Networks to map to the BIG-IP VLANs
    description: The Neutron Networks for the corresponding BIG-IP VLANs.
  network_vlan_subnets:
    type: comma_delimited_list
    label: OS Neutron Subnets to map to the BIG-IP VLANs
    description: The Neutron Subnets for the corresponding BIG-IP VLANs.
  network_vlan_security_group_rules:
    type: json
    label: Security Group Rules
    description: The rules to apply to the security groups
  bigip_default_gateway:
    type: string
    label: Default Gateway IP
    description: Upstream Gateway IP Address for BIG-IP instance.
    default: None
  bigip_vlan_names:
    type: comma_delimited_list
    label: f5 BIG-IP VE VLAN names
    description: Names of the VLAN to be created on the BIG-IP.
    default:
      -
  bigip_vlan_mtus:
    type: comma_delimited_list
    label: f5 BIG-IP VE VLAN MTUs
    description: MTU values of the VLAN on the BIG-IP.
  bigip_vlan_tags:
    type: comma_delimited_list
    label: f5 BIG-IP VE VLAN tags
    description: Tags to apply on the VLAN on the BIG-IP. Use default value "None" for untagged.
    default: None
  bigip_self_ip_addresses:
    type: comma_delimited_list
    label: f5 BIG-IP VE VLAN SelfIP Address
    description: Self-IP address to associate with the BIG-IP VLAN.
  bigip_self_cidr_blocks:
    type: comma_delimited_list
    label: f5 BIG-IP VE VLAN CIDR Blocks
    description: CIDR Blocks for the BIG-IP SelfIP addresses.
  bigip_self_port_lockdowns:
    type: comma_delimited_list
    label: f5 BIG-IP VE VLAN Allow Services Settings
    description: Optional list of <service:port> lockdown settings for the VLAN. If no value is supplied, default is used.
    default:
  wait_handle_curl:
    type: string
    label: Wait Handle Curl
    description: Resolved curl_cli value of the WaitConditionHandle that enables status signals to be sent back to Heat

resources:

  security_groups:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: bigip_nic_count }
      resource_def:
        type: F5::BigIP::CustomSecurityGroup
        properties:
          network_vlan_names: { get_param: network_vlan_names }
          security_group_index: "%index%"
          security_group_rules: { get_param: [network_vlan_security_group_rules, security_group_rules] }

  network_vlan_ports:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: bigip_nic_count }
      resource_def:
        type: F5::BigIP::NeutronPort
        properties:
          index: "%index%"
          network_names: { get_param: network_vlan_names }
          network_subnets: { get_param: network_vlan_subnets }
          ip_addresses: { get_param: bigip_self_ip_addresses }
          security_groups: {get_attr: [security_groups, security_group_id]}

  onboard_network_configs:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: bigip_nic_count }
      resource_def:
        type: F5::BigIP::OnboardNetworkConfigIndexed
        properties:
          #Note: %index% resolves directly for str_replace as shown here, but not in get_param
          script_path: /config/onboard-network-%index%.sh
          nic_count: { get_param: bigip_nic_count }
          vlan_names: { get_param: bigip_vlan_names }
          vlan_tags: { get_param: bigip_vlan_tags }
          vlan_mtus: { get_param: bigip_vlan_mtus }
          vlan_nic_index: "%index%"
          vlan_last_nic_index: { get_param: bigip_last_nic_index }
          self_ip_addrs: { get_param: bigip_self_ip_addresses }
          self_cidr_blocks: { get_param: bigip_self_cidr_blocks}
          self_port_lockdowns: { get_param: bigip_self_port_lockdowns }
          default_gateway: { get_param: bigip_default_gateway }
          wait_handle_curl: { get_param: wait_handle_curl}

  run_core_commands:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        merge_how: dict(recurse_array,no_replace)+list(append)
        runcmd:
          - nohup /config/preOnboard.sh &>> /var/log/cloud/openstack/preOnboard.log < /dev/null &
          - nohup sh -c '/config/wait_cloudlibs_install.sh; /config/onboard.sh' >> /var/log/cloud/openstack/onboard.log < /dev/null &
          -
            str_replace:
              params:
                <%last_nic_index%>: { get_param: bigip_last_nic_index }
              template: "nohup sh -c '/config/wait_cloudlibs_install.sh; f5-rest-node /config/cloud/openstack/node_modules/f5-cloud-libs/scripts/runScript.js --file /config/postOnboard.sh --wait-for ONBOARD_NETWORK_<%last_nic_index%>_DONE -o /var/log/cloud/openstack/postOnboard.log' &>> /var/log/cloud/openstack/runScript.log < /dev/null & "

  run_core_commands_static_mgmt:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        merge_how: dict(recurse_array,no_replace)+list(append)
        runcmd:
          - nohup sh -c '/config/wait-staticMgmtConfig.sh; /config/download-cloudlibs.sh' &>> /var/log/cloud/openstack/download-cloudlibs.log< /dev/null &
          - nohup sh -c '/config/wait-cloudlibsDownload.sh; /config/preOnboard.sh' &>> /var/log/cloud/openstack/preOnboard.log < /dev/null &
          - nohup sh -c '/config/wait_cloudlibs_install.sh; /config/onboard.sh' >> /var/log/cloud/openstack/onboard.log < /dev/null &
          -
            str_replace:
              params:
                <%last_nic_index%>: { get_param: bigip_last_nic_index }
              template: "nohup sh -c '/config/wait_cloudlibs_install.sh; f5-rest-node /config/cloud/openstack/node_modules/f5-cloud-libs/scripts/runScript.js --file /config/postOnboard.sh --wait-for ONBOARD_NETWORK_<%last_nic_index%>_DONE -o /var/log/cloud/openstack/postOnboard.log' &>> /var/log/cloud/openstack/runScript.log < /dev/null & "

  run_network_commands:
    type: F5::BigIP::RunOnboardNetworkConfigs
    properties:
      nic_indexes: { get_attr: [ onboard_network_configs, config_index ] }

outputs:
  port_ids:
    value: { get_attr: [network_vlan_ports, bigip_neutron_port_id ]}
  init_4_onboard_network_configs:
    value: { get_attr: [onboard_network_configs, config_id ]}
  init_5_run_core_commands:
    value: { get_resource: run_core_commands }
  init_5_run_core_commands_static_mgmt:
    value: { get_resource: run_core_commands_static_mgmt }
  init_6_run_network_commands:
    value: { get_resource: run_network_commands }
